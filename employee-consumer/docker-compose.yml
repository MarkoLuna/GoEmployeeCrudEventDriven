version: '3'
services:
    users_crud:
        image: goemployee_crud:latest
        restart: always
        links:
            - postgres_db
        depends_on:
            - postgres_db
        ports:
            - "8080:8080"
        environment:
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_NAME: ${DB_NAME}
            DB_USER: ${DB_USER}
            DB_DRIVER_NAME: ${DB_DRIVER_NAME}
            DB_PASSWORD: ${DB_PASSWORD}
            SERVER_PORT: ${SERVER_PORT}
            SERVER_HOST: "0.0.0.0"
            OAUTH_ENABLED: "true"
            SERVER_SSL_ENABLED: "false"
            SERVER_SSL_CERT_FILE_PATH: ${SERVER_SSL_CERT_FILE_PATH}
            SERVER_SSL_KEY_FILE_PATH: ${SERVER_SSL_KEY_FILE_PATH}
    postgres_db:
        image: postgres:latest
        restart: always
        volumes:
            - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
        - "2181:2181"
    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        ports:
        - "9092:9092"
        depends_on:
        - zookeeper
        environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CREATE_TOPICS: "employee-upsert.v1:1:1,employee-deletion.v1:1:1"

# TODO concentrate  all docker-compose files in only one
